
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
    }
    dependencies {
        classpath "com.avast.gradle:gradle-docker-compose-plugin:$dockerComposePluginVersion"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }
}

apply plugin: 'docker-compose'
apply plugin: 'com.google.protobuf'
apply plugin:'io.spring.dependency-management'

apply plugin: IntegrationTestsPlugin

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-sleuth:${project.ext.springCloudSleuthVersion}"
    }
}

dockerCompose {

    startedServices = [ 'not-used']

    integrationTests {
        if (System.getenv("FTGO_DOCKER_COMPOSE_FILES") != null)
            useComposeFiles = System.getenv("FTGO_DOCKER_COMPOSE_FILES").split(",").collect { "../" + it }

        startedServices = [ 'mysql']
        stopContainers = false
    }
}

integrationTest.dependsOn(integrationTestsComposeUp)

protobuf {
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                // To generate deprecated interfaces and static bindService method,
                // turn the enable_deprecated option to true below:
                option 'enable_deprecated=false'
            }
        }
    }
}

apply plugin: 'idea'

idea {
    module {
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
    }
}


dependencies {


    compile project(":common-swagger")
    compile project(":ftgo-common-jpa")

    compile project(":ftgo-consumer-service-api")
    compile project(":ftgo-kitchen-service-api")
    compile project(":ftgo-restaurant-service-api")
    compile project(":ftgo-order-service-api")
    compile project(":ftgo-consumer-service")
    compile project(":ftgo-kitchen-service")
    compile project(":ftgo-accounting-service")

    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    compile "io.micrometer:micrometer-registry-prometheus:$micrometerVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile 'javax.el:javax.el-api:2.2.5'

    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile 'org.springframework.cloud:spring-cloud-starter-zipkin'

    compile 'io.zipkin.brave:brave-bom:4.17.1'

    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"

    testCompile 'io.rest-assured:rest-assured:3.0.6'
    testCompile 'io.rest-assured:spring-mock-mvc:3.0.6'
    testCompile "io.rest-assured:json-path:3.0.6"

    testCompile project(":ftgo-test-util")
}
